; $Symbols
symbol varA = b0
symbol varB = b1
symbol varC = b2
symbol varD = b3
symbol varE = b4
symbol varF = b5
symbol varG = b6
symbol varH = b7
symbol varI = b8
symbol varJ = b9
symbol varK = b10
symbol varL = b11
symbol varM = b12
symbol varN = b13
symbol varO = b14
symbol varP = b15
symbol varQ = b16
symbol varR = b17
symbol varS = b18
symbol varT = b19
symbol varU = b20
symbol varV = b21

symbol varTEMPBYTE1 = b22
symbol varTEMPBYTE2 = b23
symbol varTEMPBYTE3 = b24
symbol varTEMPBYTE4 = b25
symbol varTEMPBYTE5 = b26
symbol varTEMPBYTE6 = b27

symbol varTEMPWORD1 = w11
symbol varTEMPWORD2 = w12
symbol varTEMPWORD3 = w13

symbol trig = B.1                 ; Define pin for Trigger & Echo (All M2, X2 parts)
symbol range = w0                 ; 16 bit word variable for range

main: 
    pulsout trig, 2              ; produce 20uS trigger pulse (must be minimum of 10uS)
    pulsin trig, 1, range        ; measures the range in 10uS steps
    pause 20                     ; recharge period after ranging completes

    ; now convert range to cm (divide by 5.8) or inches (divide by 14.8)
    ; as picaxe cannot use 5.8, multiply by 10 then divide by 58 instead

    let range = range * 10 / 58  ; multiply by 10 then divide by 58
    ; debug range
    bintoascii range, varTEMPBYTE1, varTEMPBYTE2, varTEMPBYTE3
    serout B.0, N2400, (254, 128, "distance = ", varTEMPBYTE1, varTEMPBYTE2, varTEMPBYTE3, " ")

    if range < some_value then
        high B.3
    endif

    goto main                    ; and around forever
